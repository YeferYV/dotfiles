[
    // File Explorer
    {
        "key": "a",
        "command": "explorer.newFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "shift+a",
        "command": "explorer.newFolder",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "d d",
        "command": "moveFileToTrash",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "r",
        "command": "renameFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "e",
        "command": "whichkey.triggerKey",
        "args": {
            "key": "e",
            "when": "sideBarVisible && explorerViewletVisible"
        },
        "when": "whichkeyVisible && sideBarVisible && explorerViewletVisible"
    },
    // {
    //     "key": "space",
    //     "command": "filesExplorer.openFilePreserveFocus",
    //     "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsFolder && !inputFocus"
    // },
    // {
    //     "key": "enter",
    //     "command": "explorer.openAndPassFocus",
    //     "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsFolder && !inputFocus"
    // },
    {
        "key": "Left",
        "command": "list.collapse",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "Right",
        "command": "list.select",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "Down",
        "command": "vim.remap",
        "args": {
            "commands": [
                { "command": "list.focusDown" },
                { "command": "filesExplorer.openFilePreserveFocus" },
            ]
        },
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "Up",
        "command": "vim.remap",
        "args": {
            "commands": [
                { "command": "list.focusUp" },
                { "command": "filesExplorer.openFilePreserveFocus" },
            ]
        },
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "h",
        "command": "list.collapse",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "o",
        "command": "list.select",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "shift+j",
        "command": "vim.remap",
        "args": {
            "commands": [
                { "command": "list.focusDown" },
                { "command": "list.focusDown" },
                { "command": "list.focusDown" },
                { "command": "list.focusDown" },
                { "command": "list.focusDown" },
                { "command": "list.focusDown" },
                { "command": "list.focusDown" },
                { "command": "list.focusDown" },
                { "command": "list.focusDown" },
                { "command": "list.focusDown" },
            ]
        },
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "shift+k",
        "command": "vim.remap",
        "args": {
            "commands": [
                { "command": "list.focusUp" },
                { "command": "list.focusUp" },
                { "command": "list.focusUp" },
                { "command": "list.focusUp" },
                { "command": "list.focusUp" },
                { "command": "list.focusUp" },
                { "command": "list.focusUp" },
                { "command": "list.focusUp" },
                { "command": "list.focusUp" },
                { "command": "list.focusUp" },
            ]
        },
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "shift+l",
        "command": "workbench.action.tasks.runTask",
        "args": "open-file-unfocus",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsFolder && !inputFocus"
    },
    {
        "key": "l",
        "command": "vim.remap",
        "args": {
            "commands": [
                { "command": "explorer.openAndPassFocus" },
                { "command": "workbench.action.toggleSidebarVisibility" },
            ]
        },
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsFolder && !inputFocus"
    },
    {
        "key": "q",
        "command": "workbench.action.toggleSidebarVisibility",
        "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
    },
    {
        "key": "v",
        "command": "vim.remap",
        "args": {
            "commands": [
                { "command": "explorer.openToSide" },
                { "command": "workbench.action.toggleSidebarVisibility" },
            ]
        },
        "when": "explorerViewletFocus && explorerViewletVisible && !inputFocus"
    },
    {
        "key": "z",
        "command": "workbench.files.action.collapseExplorerFolders",
        "when": "explorerViewletFocus && explorerViewletVisible && !inputFocus"
    },

    // Show UI
    {
        "key": "alt+space",
        "command": "whichkey.show",
    },

    // References Navigation
    {
        "key": "alt+n",
        "command": "editor.action.wordHighlight.next",
    },
    {
        "key": "alt+p",
        "command": "editor.action.wordHighlight.prev",
    },

    // Copy Paste
    {
        "key": "alt+c",
        "command": "editor.action.clipboardCopyAction",
        "when": "!terminalFocus"
    },
    {
        "key": "alt+v",
        "command": "editor.action.clipboardPasteAction",
        "when": "!terminalFocus"
    },
    {
        "key": "alt+c",
        "command": "workbench.action.terminal.copySelection",
        "when": "terminalFocus && terminalHasBeenCreated && terminalTextSelected || terminalFocus && terminalProcessSupported && terminalTextSelected"
    },
    {
        "key": "alt+v",
        "command": "workbench.action.terminal.paste",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },

    // Escape Navigation
    {
        "key": "alt+h",
        "command": "vim.remap",
        "when": "inputFocus && vim.mode == 'Insert' || vim.mode == 'Visual' || vim.mode == 'VisualLine' || vim.mode == 'VisualBlock'",
        "args": {
            "after": [ "<esc>", "h" ]
        }
    },
    {
        "key": "alt+j",
        "command": "vim.remap",
        "when": "inputFocus && !inQuickOpen && vim.mode == 'Insert' || vim.mode == 'Visual' || vim.mode == 'VisualLine' || vim.mode == 'VisualBlock'",
        "args": {
            "after": [ "<esc>", "j" ]
        }
    },
    {
        "key": "alt+k",
        "command": "vim.remap",
        "when": "inputFocus && !inQuickOpen && vim.mode == 'Insert' || vim.mode == 'Visual' || vim.mode == 'VisualLine' || vim.mode == 'VisualBlock'",
        "args": {
            "after": [ "<esc>", "k" ]
        }
    },
    {
        "key": "alt+l",
        "command": "vim.remap",
        "when": "inputFocus && vim.mode == 'Insert' || vim.mode == 'Visual' || vim.mode == 'VisualLine' || vim.mode == 'VisualBlock'",
        "args": {
            "after": [ "<esc>", "l" ]
        }
    },

    // Buffer Navigation
    {
        "key": "alt+;",
        "command": "vim.remap",
        "when": "!terminalFocus",
        "args": {
            "after": [ "<C-6>" ]
        }
    },
    {
        "key": "alt+s",
        "command": "workbench.action.previousEditor",
        "when": "!terminalFocus",
    },
    {
        "key": "alt+f",
        "command": "workbench.action.nextEditor",
        "when": "!terminalFocus",
    },

    // Buffer Move
    {
        "key": "shift+alt+s",
        "command": "workbench.action.moveEditorLeftInGroup",
        "when": "!terminalFocus",
    },
    {
        "key": "shift+alt+f",
        "command": "workbench.action.moveEditorRightInGroup",
        "when": "!terminalFocus",
    },

    // Terminal-Builtin Scrolling
    // {
    //     "key": "alt+d",
    //     "command": "workbench.action.terminal.scrollDown",
    //     "when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
    // },
    // {
    //     "key": "alt+e",
    //     "command": "workbench.action.terminal.scrollUp",
    //     "when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
    // },
    // {
    //     "key": "alt+r",
    //     "command": "workbench.action.terminal.scrollUpPage",
    //     "when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
    // },
    // {
    //     "key": "alt+f",
    //     "command": "workbench.action.terminal.scrollDownPage",
    //     "when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
    // },
    // {
    //     "key": "alt+g",
    //     "command": "workbench.action.terminal.scrollToBottom",
    //     "when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
    // },
    // {
    //     "key": "alt+t",
    //     "command": "workbench.action.terminal.scrollToTop",
    //     "when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
    // },
    // {
    //     "key": "alt+w",
    //     "command": "workbench.action.terminal.scrollToPreviousCommand",
    //     "when": "terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled"
    // },
    // {
    //     "key": "alt+s",
    //     "command": "workbench.action.terminal.scrollToNextCommand",
    //     "when": "terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled"
    // },

    // Find/Search
    {
        "key": "alt+w",
        "command": "-workbench.action.terminal.toggleFindWholeWord",
        "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "alt+r",
        "command": "-workbench.action.terminal.toggleFindRegex",
        "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },

    // Window Resize
    {
        "key": "alt+left",
        "command": "vim.remap",
        "args": {
            "after": [ "<C-w>", "<" ]
        }
    },
    {
        "key": "alt+down",
        "command": "vim.remap",
        "args": {
            "after": [ "<C-w>", "-" ]
        }
    },
    {
        "key": "alt+up",
        "command": "vim.remap",
        "args": {
            "after": [ "<C-w>", "+" ]
        }
    },
    {
        "key": "alt+right",
        "command": "vim.remap",
        "args": {
            "after": [ "<C-w>", ">" ]
        }
    },

    // Terminal Resize
    {
        "key": "alt+left",
        "command": "workbench.action.terminal.resizePaneLeft",
        "when": "terminalFocus"
    },
    {
        "key": "alt+right",
        "command": "workbench.action.terminal.resizePaneRight",
        "when": "terminalFocus"
    },
    {
        "key": "alt+down",
        "command": "workbench.action.terminal.resizePaneDown",
        "when": "terminalFocus"
    },
    {
        "key": "alt+up",
        "command": "workbench.action.terminal.resizePaneUp",
        "when": "terminalFocus"
    },

    // Window Navigation
    {
        "key": "ctrl+h",
        "command": "workbench.action.navigateLeft",
        "when": "vim.mode == 'Normal'",
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.navigateDown",
        "when": "vim.mode == 'Normal'",
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.navigateUp",
        "when": "vim.mode == 'Normal'",
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.navigateRight",
        "when": "vim.mode == 'Normal'",
    },

    // Toggle ParameterHints (vim.mode=='Normal' -> <C-p>:GoToFile, gH:triggerParameterHints)
    {
        "key": "ctrl+p",
        "command": "editor.action.triggerParameterHints",
        "when": "editorFocus && editorHasSignatureHelpProvider && vim.mode == 'Insert'"
    },
    {
        "key": "ctrl+p",
        "command": "closeParameterHints",
        "when": "editorFocus && parameterHintsVisible && vim.mode == 'Insert'"
    },

    // Tasks Runners
    {
        "key": "ctrl+alt+space",
        "command": "workbench.action.tasks.runTask",
        "args": "tmux-copy-mode",
        "when": "terminalFocus"
    },

    // Completion Navigation (pgdown/pgup scrolls suggestion's preview focused)
    {
        "key": "ctrl+shift+space",
        "command": "toggleSuggestionFocus",
        "when": "suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "ctrl+h",
        "command": "codeium.toggleEnable",
        "when": "inlineSuggestionVisible && vim.mode == 'Insert'"
    },
    {
        "key": "ctrl+j",
        "command": "codeium.showNextCompletion",
        "when": "inlineSuggestionVisible && vim.mode == 'Insert'"
    },
    {
        "key": "ctrl+k",
        "command": "codeium.showPreviousCompletion",
        "when": "inlineSuggestionVisible && vim.mode == 'Insert'"
    },
    {
        "key": "ctrl+l",
        // "command": "codeium.acceptCompletion"
        "command": "editor.action.inlineSuggest.commit",
        "when": "inlineSuggestionVisible && vim.mode == 'Insert'"
    },
    {
        "key": "alt+j",
        "command": "selectNextSuggestion",
        "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
    },
    {
        "key": "alt+k",
        "command": "selectPrevSuggestion",
        "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
    },
    {
        "key": "alt+l",
        "command": "acceptSelectedSuggestion",
        "when": "acceptSuggestionOnEnter && suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && suggestionMakesTextEdit && textInputFocus"
    },
    {
        "key": "tab",
        "command": "selectNextSuggestion",
        "when": "!terminalFocus && editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
    },
    {
        "key": "shift+tab",
        "command": "selectPrevSuggestion",
        "when": "!terminalFocus && editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
    },

    // QuickOpen Navigation
    {
        "key": "ctrl+j",
        "command": "workbench.action.quickOpenNavigateNext",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.quickOpenNavigatePrevious",
        "when": "inQuickOpen"
    },
    {
        "key": "tab",
        "command": "workbench.action.quickOpenNavigateNext",
        "when": "!terminalFocus && inQuickOpen"
    },
    {
        "key": "shift+tab",
        "command": "workbench.action.quickOpenNavigatePrevious",
        "when": "!terminalFocus && inQuickOpen"
    },

    // Toggle Completion
    {
        "key": "ctrl+space",
        "command": "editor.action.triggerSuggest",
        "when": "!suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "ctrl+space",
        "command": "hideSuggestWidget",
        "when": "suggestWidgetVisible && textInputFocus"
    },

    // Buffer Navigation
    {
        "key": "tab",
        "command": "workbench.action.nextEditor",
        "when": "!terminalFocus && !sideBarFocus && vim.mode == 'Normal' && editorFocus",
    },
    {
        "key": "shift+tab",
        "command": "workbench.action.previousEditor",
        "when": "!terminalFocus && !sideBarFocus && vim.mode == 'Normal' && editorFocus",
    },
    {
        "key": "right",
        "command": "workbench.action.nextEditor",
        "when": "!terminalFocus && !sideBarFocus && vim.mode == 'Normal' && editorFocus",
    },
    {
        "key": "left",
        "command": "workbench.action.previousEditor",
        "when": "!terminalFocus && !sideBarFocus && vim.mode == 'Normal' && editorFocus",
    },
    {
        "key": "ctrl+tab",
        "command": "workbench.action.nextEditor"
    },
    {
        "key": "ctrl+shift+tab",
        "command": "workbench.action.previousEditor"
    },

    // Terminal-Builtin Navigation
    {
        "key": "ctrl+shift+h",
        "command": "workbench.action.terminal.focusPreviousPane",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+shift+l",
        "command": "workbench.action.terminal.focusNextPane",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+shift+j",
        "command": "workbench.action.terminal.focusPreviousPane",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+shift+k",
        "command": "workbench.action.terminal.focusNextPane",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },

    // Debugger Navigation
    {
        "key": "ctrl+alt+d",
        "command": "workbench.extensions.action.debugExtensionHost"
    },

    // Tmux navigation (conflicting keymaps)
    {
        "key": "ctrl+up",
        "command": "-workbench.action.terminal.scrollToPreviousCommand",
        "when": "terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled"
    },
    {
        "key": "ctrl+down",
        "command": "-workbench.action.terminal.scrollToNextCommand",
        "when": "terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled"
    },

    // Insert Tab (conflicting keymaps)
    {
        "key": "tab",
        "command": "-editor.action.inlineSuggest.commit",
        "when": "inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editorTabMovesFocus"
    },
    {
        "key": "tab",
        "command": "-editor.action.inlineSuggest.commit",
        "when": "inlineSuggestionVisible && tabnine.tab-override && !editorTabMovesFocus"
    },
]
