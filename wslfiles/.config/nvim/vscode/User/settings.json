{
  "vim.easymotion": true,
  "vim.incsearch": true,
  "vim.useSystemClipboard": true,
  "vim.useCtrlKeys": true,
  "vim.hlsearch": true,
  "vim.insertModeKeyBindings": [
    {
      "before": ["j","k"],
      "after": ["<Esc>"]
    },
    {
      "before": ["k","j"],
      "after": ["<Esc>"]
    },
  ],
  "vim.visualModeKeyBindingsNonRecursive": [
    {
      "before": ["<space>"],
      "commands": ["whichkey.show"]
    },
  ],
  "vim.normalModeKeyBindingsNonRecursive": [
    {
      "before": ["<space>"],
      "commands": ["whichkey.show"]
    },
    {
      "before": ["<S-q>"],
      "commands": [ ":q" ]
    },
    {
      "before": ["<S-s>"],
      "commands": [ ":w" ]
    },
    // {
    //   "before": ["h"],
    //   "commands": [ "fakeVirtualSpace.cursorLeft" ]
    // },
    // {
    //   "before": ["j"],
    //   "commands": [ "fakeVirtualSpace.cursorDown" ]
    // },
    // {
    //   "before": ["k"],
    //   "commands": [ "fakeVirtualSpace.cursorUp" ]
    // },
    // {
    //   "before": ["l"],
    //   "commands": [ "fakeVirtualSpace.cursorRight" ]
    // },
    {
      "before": ["J"],
      "after": ["1","0","j"],
    },
    {
      "before": ["K"],
      "after": ["1","0","k"],
    },
    {
      "before": ["H"],
      "after": ["1","0","h"],
    },
    {
      "before": ["L"],
      "after": ["1","0","l"],
    },
    {
      "before": ["g",";"],
      "commands": [ "editor.action.refactor" ]
    },
    {
      "before": ["g","a"],
      "commands": [ "editor.action.autoFix" ]
    },
    {
      "before": ["g","d"],
      "commands": [ "editor.action.revealDefinition" ]
    },
    {
      "before": ["g","D"],
      "commands": [ "editor.action.revealDeclaration" ]
    },
    {
      "before": ["g","e"],
      "commands": "workbench.actions.view.problems"
    },
    {
      "before": ["g","F"],
      "commands": [ "editor.action.format" ]
    },
    {
      "before": ["g","h"],
      "commands": ["editor.action.showHover"],
    },
    {
      "before": ["g","H"],
      "commands": [ "editor.action.triggerParameterHints" ]
    },
    {
      "before": ["g","i"],
      "commands": [ "editor.action.goToImplementation" ]
    },
    {
      "before": ["g","l"],
      "commands": [ "codelens.showLensesInCurrentLine" ]
    },
    {
      "before": ["g","n"],
      "commands": [ "editor.action.marker.next" ]
    },
    {
      "before": ["g","N"],
      "commands": [ "editor.action.marker.nextInFiles" ]
    },
    {
      "before": ["g","p"],
      "commands": [ "editor.action.marker.prev" ]
    },
    {
      "before": ["g","P"],
      "commands": [ "editor.action.marker.prevInFiles" ]
    },
    {
      "before": ["g","q"],
      "commands": [ "editor.action.quickFix" ]
    },
    {
      "before": ["g","r"],
      "commands": [ "editor.action.goToReferences" ]
    },
    {
      "before": ["g","R"],
      "commands": [ "editor.action.rename" ]
    },
    {
      "before": ["g","t"],
      "commands": [ "editor.action.goToTypeDefinition" ]
    },
    {
      "before": ["g","T"],
      "commands": [ "editor.action.formatDocument" ]
    },
    {
      "before": ["g","v"],
      "commands": [ "references-view.find" ]
    },
    // {
    //   "before": ["g","o"],
    //   "commands": [ "outline.focus" ]
    // },
    // {
    //   "before": ["g","s"],
    //   "commands": [ "workbench.action.gotoSymbol" ]
    // },
    // {
    //   "before": ["g","S"],
    //   "commands": [ "workbench.action.showAllSymbols" ]
    // },
    // {
    //   "before": ["g","["],
    //   "commands": [ "editor.action.marker.previousChange" ]
    // },
    // {
    //   "before": ["g","]"],
    //   "commands": [ "editor.action.marker.nextChange" ]
    // },
    // {
    //   "before": ["<leader>", "e"],
    //   "commands": [ "workbench.action.toggleSidebarVisibility","workbench.view.explorer" ]
    // },
    // {
    //   "before": ["<leader>","h"],
    //   "commands": [":set hlsearch!"]
    // },
    // {
    //   "before": ["<leader>", "v"],
    //   "commands": [ "workbench.action.terminal.toggleTerminal"]
    // },
  ],
  "vim.leader": "<space>",
  "vim.handleKeys": {
      "<C-b>": false,
      "<C-f>": false,
  },
  "whichkey.bindings": [
  {
    "key": ";",
    "name": "commands",
    "type": "command",
    "command": "workbench.action.showCommands"
  },
  {
    "key": "/",
    "name": "comment",
    "type": "command",
    "command": "editor.action.commentLine",
  },
  {
    "key": "?",
    "name": "View All References",
    "type": "command",
    "command": "references-view.find",
    "when": "editorHasReferenceProvider"
  },
  {
    "key": "b",
    "name": "Buffers/Editors...",
    "type": "bindings",
    "bindings": [
      {
        "key": "b",
        "name": "Show all buffers/editors",
        "type": "command",
        "command": "workbench.action.showAllEditors"
      },
      {
        "key": "C",
        "name": "Close other editors",
        "type": "command",
        "command": "workbench.action.closeOtherEditors"
      },
      {
        "key": "h",
        "name": "Move editor into left group",
        "type": "command",
        "command": "workbench.action.moveEditorToLeftGroup"
      },
      {
        "key": "j",
        "name": "Move editor into below group",
        "type": "command",
        "command": "workbench.action.moveEditorToBelowGroup"
      },
      {
        "key": "k",
        "name": "Move editor into above group",
        "type": "command",
        "command": "workbench.action.moveEditorToAboveGroup"
      },
      {
        "key": "l",
        "name": "Move editor into right group",
        "type": "command",
        "command": "workbench.action.moveEditorToRightGroup"
      },
      {
        "key": "n",
        "name": "Next editor",
        "type": "command",
        "command": "workbench.action.nextEditor"
      },
      {
        "key": "p",
        "name": "Previous editor",
        "type": "command",
        "command": "workbench.action.previousEditor"
      },
      {
        "key": "N",
        "name": "New untitled editor",
        "type": "command",
        "command": "workbench.action.files.newUntitledFile"
      },
      {
        "key": "u",
        "name": "Reopen closed editor",
        "type": "command",
        "command": "workbench.action.reopenClosedEditor"
      },
      {
        "key": "x",
        "name": "Close active editor",
        "type": "command",
        "command": "workbench.action.closeActiveEditor"
      },
      {
        "key": "y",
        "name": "Copy buffer to clipboard",
        "type": "commands",
        "commands": [
          "editor.action.selectAll",
          "editor.action.clipboardCopyAction",
          "cancelSelection"
        ]
      }
    ]
  },
  {
    "key": "d",
    "name": "Debug...",
    "type": "bindings",
    "bindings": [
      {
        "key": "b",
        "name": "Toggle breakpoint",
        "type": "command",
        "command": "editor.debug.action.toggleBreakpoint"
      },
      {
        "key": "B",
        "name": "Toggle inline breakpoint",
        "type": "command",
        "command": "editor.debug.action.toggleInlineBreakpoint"
      },
      {
        "key": "c",
        "name": "Continue debug",
        "type": "command",
        "command": "workbench.action.debug.continue"
      },
      {
        "key": "i",
        "name": "Step into",
        "type": "command",
        "command": "workbench.action.debug.stepInto"
      },
      {
        "key": "o",
        "name": "Step over",
        "type": "command",
        "command": "workbench.action.debug.stepOver"
      },
      {
        "key": "O",
        "name": "Step out",
        "type": "command",
        "command": "workbench.action.debug.stepOut"
      },
      {
        "key": "j",
        "name": "Jump to cursor",
        "type": "command",
        "command": "debug.jumpToCursor"
      },
      {
        "key": "s",
        "name": "Start debug",
        "type": "command",
        "command": "workbench.action.debug.start"
      },
      {
        "key": "S",
        "name": "Stop debug",
        "type": "command",
        "command": "workbench.action.debug.stop"
      },
      {
        "key": "p",
        "name": "Pause debug",
        "type": "command",
        "command": "workbench.action.debug.pause"
      },
      {
        "key": "r",
        "name": "Run without debugging",
        "type": "command",
        "command": "workbench.action.debug.run"
      },
      {
        "key": "R",
        "name": "Restart debug",
        "type": "command",
        "command": "workbench.action.debug.restart"
      },
      {
        "key": "t",
        "name": "Toggle REPL",
        "type": "command",
        "command": "workbench.debug.action.toggleRepl"
      },
      {
        "key": "w",
        "name": "Focus on watch window",
        "type": "command",
        "command": "workbench.debug.action.focusWatchView"
      },
      {
        "key": "W",
        "name": "Add to watch",
        "type": "command",
        "command": "editor.debug.action.selectionToWatch"
      }
    ]
  },
  {
    "key": "e",
    "name": "Toggle Explorer",
    "type": "command",
    // "command": "workbench.action.toggleSidebarVisibility"
    "command": "workbench.view.explorer"
  },
  {
    "key": "f",
    "name": "Find & Replace...",
    "type": "bindings",
    "bindings": [
      {
        "key": "f",
        "name": "File",
        "type": "command",
        "command": "editor.action.startFindReplaceAction"
      },
      {
        "key": "s",
        "name": "Symbol",
        "type": "command",
        "command": "editor.action.rename",
        "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
      },
      {
        "key": "p",
        "name": "Project",
        "type": "command",
        "command": "workbench.action.replaceInFiles"
      }
    ]
  },
  {
    "key": "g",
    "name": "Git...",
    "type": "bindings",
    "bindings": [
      {
        "key": "/",
        "name": "Search Commits",
        "command": "gitlens.showCommitSearch",
        "type": "command",
        "when": "gitlens:enabled && config.gitlens.keymap == 'alternate'"
      },
      {
        "key": "a",
        "name": "Stage",
        "type": "command",
        "command": "git.stage"
      },
      {
        "key": "b",
        "name": "Checkout",
        "type": "command",
        "command": "git.checkout"
      },
      {
        "key": "B",
        "name": "Browse",
        "type": "command",
        "command": "gitlens.openFileInRemote"
      },
      {
        "key": "c",
        "name": "Commit",
        "type": "command",
        "command": "git.commit"
      },
      {
        "key": "C",
        "name": "Cherry Pick",
        "type": "command",
        "command": "gitlens.views.cherryPick"
      },
      {
        "key": "d",
        "name": "Delete Branch",
        "type": "command",
        "command": "git.deleteBranch"
      },
      {
        "key": "f",
        "name": "Fetch",
        "type": "command",
        "command": "git.fetch"
      },
      {
        "key": "F",
        "name": "Pull From",
        "type": "command",
        "command": "git.pullFrom"
      },
      {
        "key": "g",
        "name": "Graph",
        "type": "command",
        "command": "git-graph.view"
      },
      {
        "key": "h",
        "name": "Heatmap",
        "type": "command",
        "command": "gitlens.toggleFileHeatmap"
      },
      {
        "key": "H",
        "name": "History",
        "type": "command",
        "command": "git.viewFileHistory"
      },
      {
        "key": "i",
        "name": "Next Change",
        "type": "command",
        "command": "workbench.action.editor.nextChange"
      },
      {
        "key": "I",
        "name": "Init",
        "type": "command",
        "command": "git.init"
      },
      {
        "key": "j",
        "name": "Previous Change",
        "type": "command",
        "command": "workbench.action.editor.previousChange"
      },
      {
        "key": "l",
        "name": "Toggle Line Blame",
        "type": "command",
        "command": "gitlens.toggleLineBlame",
        "when": "editorTextFocus && gitlens:canToggleCodeLens && gitlens:enabled && config.gitlens.keymap == 'alternate'"
      },
      {
        "key": "L",
        "name": "Toggle GitLens",
        "type": "command",
        "command": "gitlens.toggleCodeLens",
        "when": "editorTextFocus && gitlens:canToggleCodeLens && gitlens:enabled && config.gitlens.keymap == 'alternate'"
      },
      {
        "key": "m",
        "name": "Merge",
        "type": "command",
        "command": "git.merge"
      },
      {
        "key": "o",
        "name": "Open change",
        "type": "command",
        "command": "git.openChange"
      },
      {
        "key": "O",
        "name": "Open all change",
        "type": "command",
        "command": "git.openAllChanges"
      },
      {
        "key": "p",
        "name": "Pull",
        "type": "command",
        "command": "git.pull"
      },
      {
        "key": "P",
        "name": "Push",
        "type": "command",
        "command": "git.push"
      },
      {
        "key": "r",
        "name": "Reset hunk",
        "command": "git.revertSelectedRanges",
        "when": "isInDiffEditor"
      },
      {
        "key": "s",
        "name": "Stash",
        "type": "command",
        "command": "workbench.view.scm"
      },
      {
        "key": "S",
        "name": "Status",
        "type": "command",
        "command": "gitlens.showQuickRepoStatus",
        "when": "gitlens:enabled && config.gitlens.keymap == 'alternate'"
      },
      {
        "key": "t",
        "name": "Create Tag",
        "type": "command",
        "command": "git.createTag"
      },
      {
        "key": "T",
        "name": "Delete Tag",
        "type": "command",
        "command": "git.deleteTag"
      },
      {
        "key": "U",
        "name": "Unstage",
        "type": "command",
        "command": "git.unstage"
      }
    ]
  },
  {
    "key": "i",
    "name": "Insert...",
    "type": "bindings",
    "bindings": [
      {
        "key": "j",
        "name": "Insert line below",
        "type": "command",
        "command": "editor.action.insertLineAfter"
      },
      {
        "key": "k",
        "name": "Insert line above",
        "type": "command",
        "command": "editor.action.insertLineBefore"
      },
      {
        "key": "s",
        "name": "Insert snippet",
        "type": "command",
        "command": "editor.action.insertSnippet"
      }
    ]
  },
  {
    "key": "l",
    "name": "LSP...",
    "type": "bindings",
    "bindings": [
      {
        "key": ";",
        "name": "Refactor",
        "type": "command",
        "command": "editor.action.refactor",
        "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
      },
      {
        "key": "a",
        "name": "Auto Fix",
        "type": "command",
        "command": "editor.action.autoFix",
        "when": "editorTextFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)quickfix\\b/"
      },
      {
        "key": "d",
        "name": "Go to Definition",
        "type": "command",
        "command": "editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
      },
      {
        "key": "D",
        "name": "Go to Declaration",
        "type": "command",
        "command": "editor.action.revealDeclaration"
      },
      {
        "key": "e",
        "name": "Errors",
        "type": "command",
        "command": "workbench.actions.view.problems"
      },
      {
        "key": "F",
        "name": "Format",
        "type": "command",
        "command": "editor.action.formatDocument",
        "when": "editorHasDocumentFormattingProvider && editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
      },
      {
        "key": "h",
        "name": "Hover",
        "type": "command",
        "command": "editor.action.showHover",
      },
      {
        "key": "H",
        "name": "Signature help",
        "type": "command",
        "command": "editor.action.triggerParameterHints",
      },
      {
        "key": "i",
        "name": "Go to Implementation",
        "type": "command",
        "command": "editor.action.goToImplementation",
        "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor"
      },
      {
        "key": "l",
        "name": "CodeLens",
        "type": "command",
        "command": "codelens.showLensesInCurrentLine"
      },
      {
        "key": "n",
        "name": "Next Problem",
        "type": "command",
        "command": "editor.action.marker.next",
        "when": "editorFocus"
      },
      {
        "key": "N",
        "name": "Next Problem (Proj)",
        "type": "command",
        "command": "editor.action.marker.nextInFiles",
        "when": "editorFocus"
      },
      {
        "key": "o",
        "name": "Outline",
        "type": "command",
        "command": "outline.focus"
      },
      {
        "key": "p",
        "name": "Prev Problem",
        "type": "command",
        "command": "editor.action.marker.prev",
        "when": "editorFocus"
      },
      {
        "key": "P",
        "name": "Prev Problem (Proj)",
        "type": "command",
        "command": "editor.action.marker.prevInFiles",
        "when": "editorFocus"
      },
      {
        "key": "q",
        "name": "Quick Fix",
        "type": "command",
        "command": "editor.action.quickFix",
        "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
      },
      {
        "key": "r",
        "name": "Go to References",
        "type": "command",
        "command": "editor.action.goToReferences",
        "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
      },
      {
        "key": "R",
        "name": "Rename",
        "type": "command",
        "command": "editor.action.rename",
        "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
      },
      {
        "key": "s",
        "name": "Go To Symbol",
        "type": "command",
        "command": "workbench.action.gotoSymbol"
      },
      {
        "key": "S",
        "name": "Show All Symbols",
        "type": "command",
        "command": "workbench.action.showAllSymbols"
      },
      {
        "key": "t",
        "name": "Go to typedefinition",
        "type": "command",
        "command": "editor.action.goToTypeDefinition",
      },
      {
        "key": "T",
        "name": "Format document",
        "type": "command",
        "command": "editor.action.formatDocument",
      },
      {
        "key": "v",
        "name": "View All References",
        "type": "command",
        "command": "references-view.find",
        "when": "editorHasReferenceProvider"
      },
    ]
  },
  {
    "key": "m",
    "name": "Mark...",
    "type": "bindings",
    "bindings": [
      {
        "key": "c",
        "name": "Clear Bookmarks",
        "type": "command",
        "command": "bookmarks.clear"
      },
      {
        "key": "j",
        "name": "Next Bookmark",
        "type": "command",
        "command": "bookmarks.jumpToNext",
        "when": "editorTextFocus"
      },
      {
        "key": "k",
        "name": "Previous Bookmark",
        "type": "command",
        "command": "bookmarks.jumpToPrevious",
        "when": "editorTextFocus"
      },
      {
        "key": "l",
        "name": "List Bookmarks",
        "type": "command",
        "command": "bookmarks.listFromAllFiles",
        "when": "editorTextFocus"
      },
      {
        "key": "r",
        "name": "Refresh Bookmarks",
        "type": "command",
        "command": "bookmarks.refresh"
      },
      {
        "key": "t",
        "name": "Toggle Bookmark",
        "type": "command",
        "command": "bookmarks.toggle",
        "when": "editorTextFocus"
      },
      {
        "key": "s",
        "name": "Show Bookmarks",
        "type": "command",
        "command": "workbench.view.extension.bookmarks"
      }
    ]
  },
  {
    "key": "o",
    "name": "Open...",
    "type": "bindings",
    "bindings": [
      {
        "key": "d",
        "name": "Directory",
        "type": "command",
        "command": "workbench.action.files.openFolder"
      },
      {
        "key": "r",
        "name": "Recent",
        "type": "command",
        "command": "workbench.action.openRecent"
      },
      {
        "key": "f",
        "name": "File",
        "type": "command",
        "command": "workbench.action.files.openFile"
      }
    ]
  },
  {
    "key": "p",
    "name": "Peek...",
    "type": "bindings",
    "bindings": [
      {
        "key": "d",
        "name": "Definition",
        "type": "command",
        "command": "editor.action.peekDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
      },
      {
        "key": "D",
        "name": "Declaration",
        "type": "command",
        "command": "editor.action.peekDeclaration"
      },
      {
        "key": "i",
        "name": "Implementation",
        "type": "command",
        "command": "editor.action.peekImplementation",
        "when": "editorHasImplementationProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
      },
      {
        "key": "p",
        "name": "Toggle Focus",
        "type": "command",
        "command": "togglePeekWidgetFocus",
        "when": "inReferenceSearchEditor || referenceSearchVisible"
      },
      {
        "key": "r",
        "name": "References",
        "type": "command",
        "command": "editor.action.referenceSearch.trigger"
      },
      {
        "key": "t",
        "name": "Type Definition",
        "type": "command",
        "command": "editor.action.peekTypeDefinition"
      }
    ]
  },
  {
    "key": "s",
    "name": "Search...",
    "type": "bindings",
    "bindings": [
      {
        "key": "f",
        "name": "Files",
        "type": "command",
        "command": "workbench.action.quickOpen"
      },
      {
        "key": "t",
        "name": "Text",
        "type": "command",
        "command": "workbench.action.findInFiles"
      }
    ]
  },
  {
    "key": "S",
    "name": "Show...",
    "type": "bindings",
    "bindings": [
      {
        "key": "e",
        "name": "Show explorer",
        "type": "command",
        // "command": "workbench.view.explorer"
        "command": "workbench.action.toggleSidebarVisibility"
      },
      {
        "key": "s",
        "name": "Show search",
        "type": "command",
        "command": "workbench.view.search"
      },
      {
        "key": "g",
        "name": "Show source control",
        "type": "command",
        "command": "workbench.view.scm"
      },
      {
        "key": "t",
        "name": "Show test",
        "type": "command",
        "command": "workbench.view.extension.test"
      },
      {
        "key": "r",
        "name": "Show remote explorer",
        "type": "command",
        "command": "workbench.view.remote"
      },
      {
        "key": "x",
        "name": "Show extensions",
        "type": "command",
        "command": "workbench.view.extensions"
      },
      {
        "key": "p",
        "name": "Show problem",
        "type": "command",
        "command": "workbench.actions.view.problems"
      },
      {
        "key": "o",
        "name": "Show output",
        "type": "command",
        "command": "workbench.action.output.toggleOutput"
      },
      {
        "key": "d",
        "name": "Show debug console",
        "type": "command",
        "command": "workbench.debug.action.toggleRepl"
      }
    ]
  },
  {
    "key": "t",
    "name": "Terminal...",
    "type": "bindings",
    "bindings": [
      {
        "key": "\\",
        "name": "Focus tabs view",
        "type": "command",
        "command": "workbench.action.terminal.focusTabs",
      },
      {
        "key": "1",
        "name": "Focus index 1",
        "type": "command",
        "command": "workbench.action.terminal.focusAtIndex1"
      },
      {
        "key": "2",
        "name": "Focus index 2",
        "type": "command",
        "command": "workbench.action.terminal.focusAtIndex2"
      },
      {
        "key": "3",
        "name": "Focus index3",
        "type": "command",
        "command": "workbench.action.terminal.focusAtIndex3"
      },
      {
        "key": "B",
        "name": "Move terminal to buffer",
        "type": "command",
        "command": "workbench.action.terminal.moveToEditor",
      },
      {
        "key": "f",
        "name": "Focus terminal",
        "type": "command",
        "command": "workbench.action.terminal.toggleTerminal",
        "when": "!terminalFocus"
      },
      {
        "key": "J",
        "command": "workbench.action.terminal.focusNext",
      },
      {
        "key": "K",
        "command": "workbench.action.terminal.focusPrevious",
      },
      {
        "key": "h",
        "name": "Resize left",
        "type": "command",
        "command": "workbench.action.terminal.resizePaneLeft",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
      },
      {
        "key": "j",
        "name": "Resize down",
        "type": "command",
        "command": "workbench.action.terminal.resizePaneDown",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
      },
      {
        "key": "k",
        "name": "Resize up",
        "type": "command",
        "command": "workbench.action.terminal.resizePaneUp",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
      },
      {
        "key": "l",
        "name": "Resize right",
        "type": "command",
        "command": "workbench.action.terminal.resizePaneRight",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
      },
      {
        "key": "m",
        "name": "Toggle maximized panel",
        "type": "command",
        "command": "workbench.action.toggleMaximizedPanel"
      },
      {
        "key": "n",
        "name": "Focus previous panel",
        "type": "command",
        "command": "workbench.action.terminal.focusNextPane",
      },
      {
        "key": "N",
        "name": "New terminal",
        "type": "command",
        "command": "workbench.action.terminal.new",
      },
      {
        "key": "p",
        "name": "Focus next panel",
        "type": "command",
        "command": "workbench.action.terminal.focusPreviousPane",
      },
      {
        "key": "P",
        "name": "Move terminal to panel ",
        "type": "command",
        "command": "workbench.action.terminal.moveToTerminalPanel",
      },
      {
        "key": "s",
        "name": "Split terminal (inActiveWorkspace)",
        "type": "command",
        "command": "workbench.action.terminal.splitInActiveWorkspace"
      },
      {
        "key": "t",
        "name": "Toggle terminal",
        "type": "commands",
        "commands": ["workbench.action.togglePanel"]
      },
      {
        "key": "T",
        "name": "Tab terminal",
        "type": "commands",
        "commands": ["workbench.action.togglePanel","workbench.action.terminal.moveToEditor"]
      },
      {
        "key": "v",
        "name": "Panel to right",
        "type": "commands",
        "commands": ["workbench.action.positionPanelRight","workbench.action.terminal.focus"]
      },
      {
        "key": "V",
        "name": "Panel to bottom",
        "type": "commands",
        "commands": ["workbench.action.positionPanelBottom","workbench.action.terminal.focus"]
      },
      // {
      //   "key": "v",
      //   "name": "vertical Terminal",
      //   "type": "conditional",
      //   "bindings":[
      //     {
      //       "key": "",
      //       "name": "vertical Terminal focused unneeded",
      //       "type": "commands",
      //       "commands": ["workbench.action.togglePanel","workbench.action.positionPanelRight"],
      //       // "args":
      //       // {
      //       //   "key": "",
      //       //   "name": "Focus Terminal",
      //       //   "type": "command",
      //       //   "command": "workbench.action.terminal.toggleTerminal",
      //       //   "when": "!terminalFocus"
      //       // },
      //     },
      //     {
      //       "key": "'when':'!terminalFocus'",
      //       "name": "vertical Terminal focused needed",
      //       "type": "commands",
      //       "commands": ["workbench.action.terminal.toggleTerminal"]
      //     },
      //   ]
      // },
      // {
      //   "key": "V",
      //   "name": "horizontal Terminal",
      //   "type": "conditional",
      //   "bindings":[
      //     {
      //       "key": "",
      //       "name": "horizontal Terminal focused unneeded",
      //       "type": "commands",
      //       "commands": ["workbench.action.togglePanel","workbench.action.positionPanelBottom"],
      //       // "args":
      //       // {
      //       //   "key": "",
      //       //   "name": "Focus Terminal",
      //       //   "type": "command",
      //       //   "command": "workbench.action.terminal.toggleTerminal",
      //       //   "when": "!terminalFocus"
      //       // },
      //     },
      //     {
      //       "key": "'when':'!terminalFocus'",
      //       "name": "vertical Terminal focused needed",
      //       "type": "commands",
      //       "commands": ["workbench.action.terminal.toggleTerminal"]
      //     },
      //   ]
      // },
    ]
  },
  {
    "key": "u",
    "name": "UI toggles...",
    "type": "bindings",
    "bindings": [
      {
        "key": "b",
        "name": "Toggle menu bar",
        "type": "command",
        "command": "workbench.action.toggleMenuBar",
      },
      {
        "key": "B",
        "name": "Toggle activity bar",
        "type": "command",
        "command": "workbench.action.toggleActivityBarVisibility",
      },
      {
        "key": "f",
        "name": "Toggle full screen",
        "type": "command",
        "command": "workbench.action.toggleFullScreen"
      },
      {
        "key": "h",
        "name": "Toggle highlight search",
        "type": "command",
        "command": "vim.remap",
        "args": {
          "commands":[
            // { "command": ":noh" }
            { "command": ":set hlsearch!" },
              // {
              //     "command": "editor.action.codeAction",
              //     "args": { "kind": "refactor.extract" }
              // }
          ]
        }
      },
      {
        "key": "m",
        "name": "Toggle maximized panel",
        "type": "command",
        "command": "workbench.action.toggleMaximizedPanel"
      },
      {
        "key": "M",
        "name": "Toggle Minimap",
        "type": "command",
        "command": "editor.action.toggleMinimap"
      },
      {
        "key": "p",
        "name": "Toggle panel visibility",
        "type": "command",
        "command": "workbench.action.togglePanel"
      },
      {
        "key": "s",
        "name": "Toggle side bar visibility",
        "type": "command",
        "command": "workbench.action.toggleSidebarVisibility"
      },
      {
        "key": "t",
        "name": "Select theme",
        "type": "command",
        "command": "workbench.action.selectTheme"
      },
      {
        "key": "T",
        "name": "Toggle tab visibility",
        "type": "command",
        "command": "workbench.action.toggleTabsVisibility"
      },
      {
        "key": "w",
        "name": "Wolf start",
        "type": "command",
        "command": "wolf.touchBarStart"
      },
      {
        "key": "W",
        "name": "Wolf bark",
        "type": "command",
        "command": "wolf.barkAtCurrentFile"
      },
      {
        "key": "x",
        "name": "Extensions",
        "type": "command",
        "command": "workbench.view.extensions"
      },
      {
        "key": "z",
        "name": "Toggle zen mode",
        "type": "command",
        "command": "workbench.action.toggleZenMode"
      },
      {
        "key": "Z",
        "name": "Zoom reset",
        "type": "command",
        "command": "editor.action.fontZoomReset"
      },
    ]
  },
  {
    "key": "v",
    "name": "Vertical split",
    "type": "commands",
    "commands": ["workbench.action.positionPanelRight","workbench.action.terminal.focus"]
  },
  {
    "key": "V",
    "name": "Horizontal split",
    "type": "commands",
    "commands": ["workbench.action.positionPanelBottom","workbench.action.terminal.focus"]
  },
  {
    "key": "w",
    "name": "Window...",
    "type": "bindings",
    "bindings": [
      {
        "key": "c",
        "name": "Combine all editors",
        "type": "command",
        "command": "workbench.action.joinAllGroups"
      },
      {
        "key": "C",
        "name": "Close all editor groups",
        "type": "command",
        "command": "workbench.action.closeAllGroups"
      },
      {
        "key": "f",
        "name": "Focus editor group",
        "type": "commands",
        "commands": ["workbench.action.focusActiveEditorGroup"]
      },
      {
        "key": "h",
        "name": "Move editor group left",
        "type": "command",
        "command": "workbench.action.moveActiveEditorGroupLeft"
      },
      {
        "key": "j",
        "name": "Move editor group down",
        "type": "command",
        "command": "workbench.action.moveActiveEditorGroupDown"
      },
      {
        "key": "k",
        "name": "Move editor group up",
        "type": "command",
        "command": "workbench.action.moveActiveEditorGroupUp"
      },
      {
        "key": "l",
        "name": "Move editor group right",
        "type": "command",
        "command": "workbench.action.moveActiveEditorGroupRight"
      },
      {
        "key": "t",
        "name": "Toggle editor group sizes",
        "type": "command",
        "command": "workbench.action.toggleEditorWidths"
      },
      {
        "key": "m",
        "name": "Maximize editor group",
        "type": "command",
        "command": "workbench.action.minimizeOtherEditors"
      },
      {
        "key": "M",
        "name": "Maximize editor group and hide side bar",
        "type": "command",
        "command": "workbench.action.maximizeEditor"
      },
      {
        "key": "n",
        "name": "Focus previous editor group",
        "type": "command",
        "command": "workbench.action.focusNextGroup"
      },
      {
        "key": "p",
        "name": "Focus previous editor group",
        "type": "command",
        "command": "workbench.action.focusPreviousGroup"
      },
      {
        "key": "v",
        "name": "Split Vertical",
        "type": "command",
        "command": "workbench.action.splitEditor"
      },
      {
        "key": "V",
        "name": "Split Horizontal",
        "type": "command",
        "command": "workbench.action.splitEditorDown"
      },
      {
        "key": "x",
        "name": "Close editor group",
        "type": "command",
        "command": "workbench.action.closeEditorsInGroup"
      },
      {
        "key": "=",
        "name": "Reset editor group sizes",
        "type": "command",
        "command": "workbench.action.evenEditorWidths"
      },
    ]
  },
  {
    "key": "y",
    "name": "Sync...",
    "type": "bindings",
    "bindings": [
      {
        "key": "d",
        "name": "Download Settings",
        "type": "command",
        "command": "extension.downloadSettings"
      },
      {
        "key": "u",
        "name": "Upload Settings",
        "type": "command",
        "command": "extension.updateSettings"
      }
    ]
  },
],

  "editor.bracketPairColorization.enabled": true,
  "editor.cursorBlinking": "solid",
  "editor.cursorSurroundingLines": 4,
  "editor.fontFamily": "\"3270Medium NF\",\"Bedstead\",\"CaskaydiaCove Nerd Font\"",
  // "editor.fontSize": 15,
  "editor.fontWeight": 500,
  "editor.inlineSuggest.enabled": true,
  "editor.minimap.enabled": false,
  "editor.renderLineHighlight": "none",
  "editor.suggest.preview": true,
  "editor.tokenColorCustomizations": {
      "textMateRules": [
          {
              "scope": "keyword",
              "settings": { "fontStyle": "bold" }
          },
          {
              "scope": "entity.name.type",
              "settings": { "fontStyle": "bold" }
          },
          {
              "scope": "storage",
              "settings": { "fontStyle": "bold" }
          },
          {
              "scope": "constant.language",
              "settings": { "fontStyle": "bold" }
          },
          {
              "scope": "support.class.builtin",
              "settings": { "fontStyle": "bold" }
          }
      ]
  },
  "explorer.decorations.colors": false,
  "files.exclude": {
      "node_modules": true
  },
  "files.trimTrailingWhitespace": true,
  "github.copilot.enable": {
      "*": true,
      "yaml": false,
      "plaintext": false,
      "markdown": true
  },
  "workbench.colorCustomizations": {
      "[Mountain]":{
          // "editorCursor.background": "#555555",
          // "editorCursor.foreground": "#aaaaaa",
          "terminalCursor.background": "#000000",
          "terminalCursor.foreground": "#ffffff",
          "activityBar.background" : "#131313",
          "breadcrumb.foreground":"#535353",
          "editorGroupHeader.tabsBackground":"#181818",
          "editorLineNumber.activeForeground" : "#f0f0f0",
          "editorLineNumber.foreground" : "#373737",
          "list.activeSelectionBackground" : "#090909",
          "list.focusBackground" : "#181818",
          "list.inactiveSelectionBackground" : "#181818",
          "list.focusAndSelectionOutline" : "#555555",
          "sideBar.background" : "#090909",
          "sideBar.foreground": "#A1A1A1",
          "editorSuggestWidget.background": "#0f0f0f", // widget bg
          "editorSuggestWidget.border": "#535353",
          "editorSuggestWidget.selectedBackground": "#1c1c1c",
          "editorSuggestWidget.highlightForeground": "#746f91", // typed(matching) symbols color
          "editorSuggestWidget.focusHighlightForeground": "#746f91",
          // "scrollbarSlider.background": "#373737",
          // "statusBar.debuggingBackground": "#263238",
          // "statusBar.noFolderBackground" : "#212121",
          // "statusBar.background" : "#131313",
          // "statusBar.foreground" : "#818181",
          "statusBar.background" : "#212121",
          "statusBar.foreground" : "#cccccc",
          "tab.activeBackground" : "#0f0f0f",
          "tab.inactiveForeground" :"#535353",
      },
  },
  "Lua.telemetry.enable": false,
  "debug.inlineValues": "on",
  // "diffEditor.renderSideBySide": false,
  // "git.autofetch": true,
  "gitlens.codeLens.enabled": false,
  "gitlens.currentLine.enabled": false,
  "gitlens.hovers.currentLine.over": "line",
  // "javascript.inlayHints.functionLikeReturnTypes.enabled": true,
  // "javascript.referencesCodeLens.enabled": true,
  // "javascript.referencesCodeLens.showOnAllFunctions": true,
  "python.defaultInterpreterPath": "/bin/python",
  // "quokka.automaticRestart": true,
  // "quokka.automaticStartRegex": "\\.(ts|js|jsx|tsx)$",
  "material-icon-theme.folders.color": "#A1A1A1",
  "material-icon-theme.folders.theme": "specific",
  "scm.alwaysShowActions": true,
  "tabnine.experimentalAutoImports": true,
  "telemetry.telemetryLevel": "off",
  "terminal.integrated.defaultProfile.linux": "tmux",
  // "terminal.integrated.fontSize": 15,
  "terminal.integrated.shellIntegration.enabled": false,
  "window.customMenuBarAltFocus": false,
  "window.enableMenuBarMnemonics": false,
  "window.menuBarVisibility": "toggle",
  "wolf.logErrors": true,
  "wolf.pythonPath": "/usr/bin/python",
  "workbench.startupEditor": "none",
  "workbench.colorTheme": "Mountain",
  "workbench.iconTheme": "material-icon-theme",
  "workbench.folderLabelColor": "#ff0000",
  "workbench.panel.defaultLocation": "right",
  "workbench.activityBar.visible": false,
}