#!/bin/bash
# https://gist.github.com/Provessor/e4ee757e6c424083ca3c6441fe6ab9ac

# FILE="$1"
W=$2
H=$3
X=$4
Y=$5

TMP_FILE="$HOME/.cache/lf/err.png"
TMP_FILE_SIXEL="$HOME/.cache/lf/err.six"
OFFSET="$(cat "$LF_SCROLLINGPREVIEW_TEMPDIR/offset")"

function check_cache {
    if [ ! -d "$HOME/.cache/lf" ]; then
        mkdir -p "$HOME/.cache/lf"
    fi
}

function hash_filename {
    TMP_FILE="$HOME/.cache/lf/$(echo ${1%.*} | sed -e 's|/|\!|g').$2"
}

function hash_sixel {
    TMP_FILE_SIXEL="$HOME/.cache/lf/$(echo ${1%.*} | sed -e 's|/|\!|g').$2"
}

function draw_kitty {
    [[ -e "$UB_SOCKET" ]] && ueberzugpp cmd -s $UB_SOCKET -a add -i PREVIEW -x $X -y $Y --max-width $((W - 2)) --max-height $((H)) -f "$1" && exit 1
    [[ -e /.dockerenv ]] && PTS="/dev/pts/0"
    [[ -z $TMUX ]] && [[ -z $NVIM ]] &&
      ( kitty +icat --silent --stdin no --transfer-mode memory --place "$((W - 1))x$((H))@$((X))x$((Y))" "$1" ) < /dev/null > /dev/tty ||
      ( tput cup $((Y)) $((X)) && img2sixel --loop-control=disable --width=$((W*7)) "$1" ) > $PTS
}

function draw_sixel {
    killall -s SIGWINCH lf && sleep 0.5 && #if >/dev/tty \
    ( tput cup $((Y)) $((X)) && cat "$1" )>/dev/tty
    # ( tput cup $((Y)) $((X)) && img2sixel --loop-control=disable --width=$((W*7))  "$1" ) >/dev/tty
}

function draw_wezterm {
    killall -s SIGWINCH lf && sleep 0.5 && #if >/dev/tty \
    ( tput cup $((Y)) $((X)) && wezterm imgcat --width $((W)) "$1" ) >/dev/tty
}

function make_sixel {
    if [ "${TMP_FILE_SIXEL}" -ot "$1" ]; then
        img2sixel --loop-control=disable --height=400 -i "$1" -o "${TMP_FILE_SIXEL}"
        # wezterm imgcat --width $((W)) "$1" > "${TMP_FILE_SIXEL}"
    fi
}

function make_djvu {
    if [ "${TMP_FILE}" -ot "$1" ]; then
        ddjvu -format=ppm -page=1 "$1" "${TMP_FILE}"
    fi
}

function make_video {
    if [ "${TMP_FILE}" -ot "$1" ]; then
	      # ffmpegthumbnailer -s 0 -c png -i "$1" -o "${TMP_FILE}"
	      ffmpeg -ss 00:10 -i "$1"  -frames 1 -f image2 "${TMP_FILE}"
    fi
}

function make_pdf {
    if [ "${TMP_FILE}" -ot "$1" ]; then
        # pdftoppm -singlefile -png "$1" "${TMP_FILE%.png}"
        # mutool draw -F png -o "${TMP_FILE}" "$1" 1
        convert "${f}[0]" png:"${TMP_FILE}"
    fi
}

check_cache
case $(file -Lb --mime-type "$1") in

    image/vnd.djvu)
        hash_filename "$1" "ppm"
        make_djvu "$1" "$2" "$3"
        # hash_sixel "${TMP_FILE}" "six"
        # make_sixel "${TMP_FILE}" "$2" "$3"
        # draw_sixel "${TMP_FILE_SIXEL}" "$2" "$3" "$4" "$5"
        draw_kitty "${TMP_FILE}" "$2" "$3" "$4" "$5"
        # draw_wezterm "${TMP_FILE}" "$2" "$3" "$4" "$5"
        exit 1
        ;;
    image/*)
        # hash_sixel "$1" "six"
        # make_sixel "$1" "$2" "$3"
        # draw_sixel "${TMP_FILE_SIXEL}" "$2" "$3" "$4" "$5"
        draw_kitty "$1" "$2" "$3" "$4" "$5"
        # draw_wezterm "$1" "$2" "$3" "$4" "$5"
        exit 1
        ;;
    video/*)
        hash_filename "$1" "jpg"
        make_video "$1" "$2" "$3"
        # hash_sixel "${TMP_FILE}" "six"
        # make_sixel "${TMP_FILE}" "$2" "$3"
        # draw_sixel "${TMP_FILE_SIXEL}" "$2" "$3" "$4" "$5"
        draw_kitty "${TMP_FILE}" "$2" "$3" "$4" "$5"
        # draw_wezterm "${TMP_FILE}" "$2" "$3" "$4" "$5"
        exit 1
        ;;
    application/pdf)
        hash_filename "$1" "png"
        make_pdf "$1" "$2" "$3"
        # hash_sixel "${TMP_FILE}" "six"
        # make_sixel "${TMP_FILE}" "$2" "$3"
        # draw_sixel "${TMP_FILE_SIXEL}" "$2" "$3" "$4" "$5"
        draw_kitty "${TMP_FILE}" "$2" "$3" "$4" "$5"
        # draw_wezterm "${TMP_FILE}" "$2" "$3" "$4" "$5"
        exit 1
        ;;
    application/gzip|*x-xz|*bzip*|*zstd)
        tar tf "$1" || echo "no tar :("
        ;;
    application/zip)
        unzip -Z -1 "$1" || echo "no unzip :("
        ;;
    application/x-sharedlib)
        readelf -h "$1" || echo "no readelf :("
        ;;
    *rar)
        unrar l "$1" || echo "no unrar :("
        ;;
    *json)
        bat --style plain --color always --line-range "${OFFSET:-1}:" "$1" ||echo "no bat :("
        ;;
    *)
        bat --style plain --color always --line-range "${OFFSET:-1}:" "$1" ||echo "no bat :("
        # nl -ba "$file" | awk "NR > ${OFFSET}-1"
        ;;

esac

exit 0
