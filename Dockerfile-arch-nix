# syntax=docker/dockerfile:1

#=================== Docker Run Dockerfile ===================#

# docker build . -t arch-nix-dockerfile
# docker run -it \
#            --name arch-nix-dockerfile \
#            --volume=$(pwd):/root/.config/dotfiles/winfiles-docker-volume \
#            --volume=/run/user/1000/pipewire-0:/run/user/1000/pipewire-0 \
#            --volume=/tmp/.X11-unix:/tmp/.X11-unix \
#            arch-nix-dockerfile

#================== Dockerfile Build RiceNix =================#

# FROM archlinux:base-devel
# COPY . /root/.config/dotfiles/winfiles-docker-volume
# RUN pacman-key --init \
#     && pacman-key --populate \
#     && pacman -Sy  --noconfirm archlinux-keyring \
#     && useradd -mG wheel drksl \
#     && echo root:toor | chpasswd \
#     && echo drksl:toor | chpasswd \
#     && echo "%wheel ALL=(ALL:ALL) NOPASSWD: ALL" > /etc/sudoers.d/wheel \
#     && mkdir -p /home/drksl/.config/dotfiles \
#     && cp -r /root/.config/dotfiles/winfiles-docker-volume /home/drksl/.config/dotfiles/winfiles \
#     && chown -R drksl:drksl /home/drksl/.config \
#     && sudo -u "drksl" bash -c "cd ~/.config/dotfiles/winfiles/wslfiles/.local/bin && ./RiceNix"
#     && mkdir -p /run/user/1000 \
#     && chown -R drksl:drksl /run/user/1000

# USER drksl
# WORKDIR /home/drksl
# ENV USER="drksl"
# ENV DISPLAY=:0
# ENV XDG_RUNTIME_DIR=/run/user/1000
# CMD ["/bin/zsh","-l"]

#================= Dockerfile Build Dotfiles =================#

FROM archlinux/archlinux:base-devel

RUN sed -i '33s/#//' /etc/pacman.conf \
    && sed -i '34s/N/#N/' /etc/pacman.conf \
    && sed -i '37s/V/#V/' /etc/pacman.conf \
    && pacman-key --init \
    && pacman-key --populate \
    && pacman -Sy  --noconfirm archlinux-keyring \
    && pacman -Syu --noconfirm zsh curl \
    && useradd -mG wheel --shell /usr/bin/zsh drksl \
    && echo root:toor | chpasswd \
    && echo drksl:toor | chpasswd \
    && echo "%wheel ALL=(ALL:ALL) NOPASSWD: ALL" > /etc/sudoers.d/wheel

# Set environments
USER drksl
WORKDIR /home/drksl
ENV USER="drksl"
SHELL ["/bin/bash", "-c"]
ENV SHELL="/bin/zsh"
ENV DISPLAY=:0

# # pipewire:
# ENV XDG_RUNTIME_DIR=/run/user/1000
# RUN sudo mkdir -p /run/user/1000 && sudo chown -R drksl:drksl /run/user/1000

# install nixpkgs
RUN curl -L https://nixos.org/nix/install | sh \
    && . "$HOME"/.nix-profile/etc/profile.d/nix.sh \
    && nix-channel --update \
    && nix-env -iA \
       bat \
       cht-sh \
       fzf \
       ffmpegthumbnailer \
       gcc11 \
       git \
       less \
       lazygit \
       libsixel \
       light \
       lf \
       moreutils \
       neovim \
       perl534Packages.FileMimeInfo \
       pipewire \
       playerctl \
       ripgrep \
       spaceship-prompt \
       stow \
       sxhkd \
       sxiv \
       trash-cli \
       unzip \
       xclip \
       xorg.libXfont \
       xorg.setxkbmap \
       xorg.xkbcomp \
       xorg.xmodmap \
       xorg.xorgserver \
       xorg.xset \
       zathura \
       zsh-autosuggestions \
       zsh-fast-syntax-highlighting \
       -f https://github.com/NixOS/nixpkgs/archive/09066922296d9ef06bfadb937b2560524dd10785.tar.gz

# Dotfiles
COPY --chown=drksl . /home/drksl/.config/dotfiles/winfiles

# stow
RUN . "$HOME"/.nix-profile/etc/profile.d/nix.sh \
    &&  mkdir "$HOME"/.local \
    && cd /home/drksl/.config/dotfiles/winfiles/wslfiles \
    && stow --restow --verbose --target="$HOME"/.config .config \
    && stow --restow --verbose --target="$HOME"/.local .local \
    && ln -sf "$HOME"/.config/shell/.zprofile "$HOME"/.zprofile

# AUR:
RUN . "$HOME"/.nix-profile/etc/profile.d/nix.sh \
    && git clone https://aur.archlinux.org/yay-bin.git /home/drksl/yay-bin \
    && cd  /home/drksl/yay-bin && makepkg --noconfirm -si

# neovim plugins:
RUN . "$HOME"/.nix-profile/etc/profile.d/nix.sh \
    && git clone --depth 1 https://github.com/wbthomason/packer.nvim $HOME/.local/share/nvim/site/pack/packer/start/packer.nvim \
    && nvim -u $HOME/.config/nvim/lua/user/plugins.lua --headless -c "autocmd User PackerComplete quitall" -c "PackerSync"

# # xsixel
# RUN . "$HOME"/.nix-profile/etc/profile.d/nix.sh \
#     && mkdir xserver-sixel \
#     && cd xserver-sixel \
#     && git init \
#     && git remote add origin https://github.com/saitoha/xserver-sixel \
#     && git fetch --depth=1 origin 7f4af3440cd736942f87ae96d15f7eaa2c1d58a9 \
#     && git checkout 7f4af34 \
#     && $(sed -i '/sixel/a\    --disable-xwayland \\' build-xsixel.sh) \
#     && sed -i 's|/usr/local|$HOME/.local|' build-xsixel.sh \
#     && sed -i 's|/usr|$HOME/.nix-profile|' build-xsixel.sh \
#     && sed -i 's/gl >= *.*.0/gl >= 1.2.0/g' configure.ac \
#     && nix-shell --pure \
#                  -I https://github.com/NixOS/nixpkgs/archive/09066922296d9ef06bfadb937b2560524dd10785.tar.gz \
#                  --packages autoconf automake clang_11 libdrm libGL libmd libsixel nettle pkg-config \
#                    xorg.fontutil xorg.libX11 xorg.libxkbfile xorg.libXfont xorg.utilmacros xorg.xorgserver xorg.xtrans \
#                  --command "CC=clang ./build-xsixel.sh && make install"

RUN <<EOT bash
    . "$HOME"/.nix-profile/etc/profile.d/nix.sh
    mkdir xserver-sixel
    cd xserver-sixel
    git init
    git remote add origin https://github.com/saitoha/xserver-sixel
    git fetch --depth=1 origin 7f4af3440cd736942f87ae96d15f7eaa2c1d58a9
    git checkout 7f4af34
    $(sed -i '/sixel/a\    --disable-xwayland \\' build-xsixel.sh)
    sed -i 's|/usr/local|$HOME/.local|' build-xsixel.sh
    sed -i 's|/usr|$HOME/.nix-profile|' build-xsixel.sh
    sed -i 's/gl >= *.*.0/gl >= 1.2.0/g' configure.ac
    nix-shell --pure \
            -I https://github.com/NixOS/nixpkgs/archive/09066922296d9ef06bfadb937b2560524dd10785.tar.gz \
            --packages autoconf automake gcc11 libdrm libGL libmd libsixel nettle pkg-config \
                xorg.fontutil xorg.libX11 xorg.libxkbfile xorg.libXfont xorg.utilmacros xorg.xorgserver xorg.xtrans \
            --command "./build-xsixel.sh && make install"
EOT

# # mpv-sixel
# RUN . "$HOME"/.nix-profile/etc/profile.d/nix.sh \
#     && mkdir mpv \
#     && cd mpv \
#     && git init \
#     && git remote add origin https://github.com/mpv-player/mpv \
#     && git fetch --depth=1 origin 0044c19f0de29ff752eb708365322b0ec16b53e7 \
#     && git checkout 0044c19 \
#     && nix-shell --pure \
#                  --keep NIX_SSL_CERT_FILE \
#                  -I https://github.com/NixOS/nixpkgs/archive/09066922296d9ef06bfadb937b2560524dd10785.tar.gz \
#                  --packages ffmpeg libass lua libsixel libGL mesa mujs pipewire pkg-config pulseaudio python310 \
#        	  	      xorg.libX11 xorg.libXv xorg.libXScrnSaver xorg.libXext xorg.libXinerama xorg.libXrandr zlib \
#                  --command "NIX_SSL_CERT_FILE=${NIX_SSL_CERT_FILE:-/etc/ssl/certs/ca-certificates.crt} ./bootstrap.py && ./waf configure --prefix=$HOME/.local && ./waf build && ./waf install"

# mpv-sixel
RUN <<EOT bash
    . "$HOME"/.nix-profile/etc/profile.d/nix.sh
    mkdir mpv
    cd mpv
    git init
    git remote add origin https://github.com/mpv-player/mpv
    git fetch --depth=1 origin 0044c19f0de29ff752eb708365322b0ec16b53e7
    git checkout 0044c19
    nix-shell --pure \
            --keep NIX_SSL_CERT_FILE \
            -I https://github.com/NixOS/nixpkgs/archive/09066922296d9ef06bfadb937b2560524dd10785.tar.gz \
            --packages ffmpeg libass lua libsixel libGL mesa mujs pipewire pkg-config pulseaudio python310 \
                xorg.libX11 xorg.libXv xorg.libXScrnSaver xorg.libXext xorg.libXinerama xorg.libXrandr zlib \
            --command "NIX_SSL_CERT_FILE=${NIX_SSL_CERT_FILE:-/etc/ssl/certs/ca-certificates.crt} ./bootstrap.py && ./waf configure --prefix=$HOME/.local && ./waf build && ./waf install"
EOT

# clean
RUN . "$HOME"/.nix-profile/etc/profile.d/nix.sh \
    && nix-collect-garbage -d \
    && yes | yay -Scc \
    && rm -rf /home/drksl/{.bash_logout,.bash_profile,.bashrc,mpv,neovim,xserver-sixel,yay-bin} \
    && mkdir /home/drksl/.cache/zsh \
    && printf "\e[1;32m Done! \e[0m\n"

ENTRYPOINT ["/bin/zsh","-l"]