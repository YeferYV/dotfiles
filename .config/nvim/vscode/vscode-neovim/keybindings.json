[
  // File Explorer
  // { "key": "space", "command": "filesExplorer.openFilePreserveFocus", "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsFolder && !inputFocus" },
  // { "key": "enter", "command": "explorer.openAndPassFocus", "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsFolder && !inputFocus" },
  { "key": "a", "command": "explorer.newFile", "when": "listFocus && !inputFocus" },
  { "key": "shift+a", "command": "explorer.newFolder", "when": "listFocus && !inputFocus" },
  { "key": "d d", "command": "moveFileToTrash", "when": "listFocus && !inputFocus" },
  { "key": "r", "command": "renameFile", "when": "listFocus && !inputFocus" },
  { "key": "e", "command": "whichkey.triggerKey", "args": { "key": "e", "when": "sideBarVisible && explorerViewletVisible" }, "when": "whichkeyVisible && sideBarVisible && explorerViewletVisible" },
  { "key": "h", "command": "list.collapse", "when": "listFocus && !inputFocus" },
  { "key": "o", "command": "list.select", "when": "listFocus && !inputFocus" },
  { "key": "Left", "command": "list.collapse", "when": "listFocus && !inputFocus" },
  { "key": "Right", "command": "list.select", "when": "listFocus && !inputFocus" },
  { "key": "Down", "command": "runCommands", "args": { "commands": [ "list.focusDown", "filesExplorer.openFilePreserveFocus", ] }, "when": "listFocus && !inputFocus" },
  { "key": "Up", "command": "runCommands", "args": { "commands": [ "list.focusUp", "filesExplorer.openFilePreserveFocus", ] }, "when": "listFocus && !inputFocus" },
  { "key": "shift+j", "command": "runCommands", "args": { "commands": [ "list.focusDown", "list.focusDown", "list.focusDown", "list.focusDown", "list.focusDown", "list.focusDown", "list.focusDown", "list.focusDown", "list.focusDown", "list.focusDown" ] }, "when": "listFocus && !inputFocus" },
  { "key": "shift+k", "command": "runCommands", "args": { "commands": [ "list.focusUp", "list.focusUp", "list.focusUp", "list.focusUp", "list.focusUp", "list.focusUp", "list.focusUp", "list.focusUp", "list.focusUp", "list.focusUp" ] }, "when": "listFocus && !inputFocus" },
  { "key": "shift+l", "command": "runCommands", "args": { "commands": [ "explorer.openAndPassFocus", "workbench.view.explorer", ] }, "when": "listFocus && !inputFocus" },
  { "key": "l", "command": "runCommands", "args": { "commands": [ "explorer.openAndPassFocus", "workbench.action.toggleSidebarVisibility", ] }, "when": "listFocus && !inputFocus" },
  { "key": "v", "command": "runCommands", "args": { "commands": [ "explorer.openToSide", "workbench.action.toggleSidebarVisibility", ] }, "when": "listFocus && !inputFocus" },
  { "key": "q", "command": "workbench.action.toggleSidebarVisibility", "when": "listFocus && !inputFocus" },
  { "key": "z", "command": "workbench.files.action.collapseExplorerFolders", "when": "listFocus && !inputFocus" },

  // Show UI
  { "key": "ctrl+\\", "command": "workbench.action.togglePanel" },
  { "key": "alt+space", "command": "whichkey.show" },
  { "key": "space", "command": "whichkey.show", "when": "editorTextFocus && neovim.mode == normal" },

  // References Navigation
  { "key": "alt+n", "command": "editor.action.wordHighlight.next" },
  { "key": "alt+p", "command": "editor.action.wordHighlight.prev" },

  // Copy Paste
  { "key": "alt+c", "command": "editor.action.clipboardCopyAction", "when": "!terminalFocus" },
  { "key": "alt+v", "command": "editor.action.clipboardPasteAction", "when": "!terminalFocus" },
  { "key": "alt+c", "command": "workbench.action.terminal.copySelection", "when": "terminalFocus" },
  { "key": "alt+v", "command": "workbench.action.terminal.paste", "when": "terminalFocus" },

  // Escape Navigation
  { "key": "j", "command": "vscode-neovim.compositeEscape1", "when": "neovim.mode == insert && editorTextFocus", "args": "j" },
  { "key": "k", "command": "vscode-neovim.compositeEscape2", "when": "neovim.mode == insert && editorTextFocus", "args": "k" },
  { "key": "alt+h", "command": "vscode-neovim.send", "args": "<esc>h", "when": "inputFocus && neovim.mode != 'normal'" },
  { "key": "alt+j", "command": "vscode-neovim.send", "args": "<esc>j", "when": "inputFocus && neovim.mode != 'normal'" },
  { "key": "alt+k", "command": "vscode-neovim.send", "args": "<esc>k", "when": "inputFocus && neovim.mode != 'normal'" },
  { "key": "alt+l", "command": "vscode-neovim.send", "args": "<esc>l", "when": "inputFocus && neovim.mode != 'normal'" },

  // Buffer Navigation
  { "key": "ctrl+;", "command": "vscode-neovim.send", "args": "<C-;>", "when": "!terminalFocus" },
  { "key": "alt+s", "command": "workbench.action.previousEditor", "when": "!terminalFocus" },
  { "key": "alt+f", "command": "workbench.action.nextEditor", "when": "!terminalFocus" },

  // Buffer Move
  { "key": "alt+shift+s", "command": "workbench.action.moveEditorLeftInGroup", "when": "!terminalFocus" },
  { "key": "alt+shift+f", "command": "workbench.action.moveEditorRightInGroup", "when": "!terminalFocus" },

  // Terminal clear/copy-mode
  { "key": "ctrl+alt+l", "command": "workbench.action.terminal.clear", "when": "terminalFocus" },
  { "key": "ctrl+alt+space", "command": "workbench.action.terminal.focusAccessibleBuffer", "when": "terminalFocus" },

  // Terminal Scrolling-Navigation
  { "key": "alt+r", "command": "workbench.action.terminal.scrollToNextCommand", "when": "terminalFocus" },
  { "key": "alt+w", "command": "workbench.action.terminal.scrollToPreviousCommand", "when": "terminalFocus" },
  { "key": "alt+e", "command": "workbench.action.terminal.scrollUp", "when": "terminalFocus" },
  { "key": "alt+d", "command": "workbench.action.terminal.scrollDown", "when": "terminalFocus" },
  { "key": "alt+q", "command": "workbench.action.terminal.scrollUpPage", "when": "terminalFocus" },
  { "key": "alt+a", "command": "workbench.action.terminal.scrollDownPage", "when": "terminalFocus" },
  { "key": "alt+t", "command": "workbench.action.terminal.scrollToTop", "when": "terminalFocus" },
  { "key": "alt+g", "command": "workbench.action.terminal.scrollToBottom", "when": "terminalFocus" },

  // Tmux-toggle
  { "key": "ctrl+b 1", "command": "workbench.action.terminal.focusAtIndex1", "when": "terminalFocus" },
  { "key": "ctrl+b 2", "command": "workbench.action.terminal.focusAtIndex2", "when": "terminalFocus" },
  { "key": "ctrl+b 3", "command": "workbench.action.terminal.focusAtIndex3", "when": "terminalFocus" },
  { "key": "ctrl+b 4", "command": "workbench.action.terminal.focusAtIndex4", "when": "terminalFocus" },
  { "key": "ctrl+b 5", "command": "workbench.action.terminal.focusAtIndex5", "when": "terminalFocus" },
  { "key": "ctrl+b 6", "command": "workbench.action.terminal.focusAtIndex6", "when": "terminalFocus" },
  { "key": "ctrl+b 7", "command": "workbench.action.terminal.focusAtIndex7", "when": "terminalFocus" },
  { "key": "ctrl+b 8", "command": "workbench.action.terminal.focusAtIndex8", "when": "terminalFocus" },
  { "key": "ctrl+b 9", "command": "workbench.action.terminal.focusAtIndex9", "when": "terminalFocus" },
  { "key": "ctrl+alt+b", "command": "workbench.action.toggleSidebarVisibility", "when": "terminalFocus" },
  { "key": "ctrl+b c", "command": "workbench.action.terminal.newInActiveWorkspace", "when": "terminalFocus" },
  { "key": "ctrl+t", "command": "workbench.action.terminal.newInActiveWorkspace", "when": "terminalFocus" },
  { "key": "ctrl+w", "command": "workbench.action.terminal.kill", "when": "terminalFocus" },

  // Tmux-panes
  { "key": "ctrl+b ;", "command": "workbench.action.quickOpenTerm", "when": "terminalFocus" },
  { "key": "ctrl+b shift+1", "command": "workbench.action.terminal.unsplit", "when": "terminalFocus" },
  { "key": "ctrl+b z", "command": "workbench.action.toggleMaximizedPanel", "when": "terminalFocus" },
  { "key": "ctrl+b shift+=", "command": "workbench.action.terminal.join", "when": "terminalFocus" },
  { "key": "ctrl+b x", "command": "workbench.action.terminal.kill", "when": "terminalFocus" },
  { "key": "alt+s", "command": "workbench.action.terminal.focusPrevious", "when": "terminalFocus" },
  { "key": "alt+f", "command": "workbench.action.terminal.focusNext", "when": "terminalFocus" },
  { "key": "alt+shift+s", "command": "runCommands", "args": { "commands": [ "workbench.action.terminal.moveToEditor", "workbench.action.terminal.moveToTerminalPanel" ] } },
  { "key": "alt+shift+f", "command": "runCommands", "args": { "commands": [ "workbench.action.terminal.moveToEditor", "workbench.action.terminal.moveToTerminalPanel" ] } },
  { "key": "ctrl+alt+n", "command": "workbench.action.terminal.focusNext", "when": "terminalFocus" },
  { "key": "ctrl+alt+p", "command": "workbench.action.terminal.focusPrevious", "when": "terminalFocus" },
  { "key": "ctrl+left", "command": "workbench.action.terminal.focusPreviousPane", "when": "terminalFocus" },
  { "key": "ctrl+right", "command": "workbench.action.terminal.focusNextPane", "when": "terminalFocus" },
  { "key": "ctrl+up", "command": "workbench.action.terminal.focusPreviousPane", "when": "terminalFocus" },
  { "key": "ctrl+down", "command": "workbench.action.terminal.focusNextPane", "when": "terminalFocus" },
  { "key": "ctrl+b h", "command": "workbench.action.terminal.focusPreviousPane", "when": "terminalFocus" },
  { "key": "ctrl+b j", "command": "workbench.action.terminal.focusNextPane", "when": "terminalFocus" },
  { "key": "ctrl+b k", "command": "workbench.action.terminal.focusPreviousPane", "when": "terminalFocus" },
  { "key": "ctrl+b l", "command": "workbench.action.terminal.focusNextPane", "when": "terminalFocus" },
  { "key": "ctrl+b shift+h", "command": "workbench.action.terminal.resizePaneLeft", "when": "terminalFocus" },
  { "key": "ctrl+b shift+j", "command": "workbench.action.terminal.resizePaneDown", "when": "terminalFocus" },
  { "key": "ctrl+b shift+k", "command": "workbench.action.terminal.resizePaneUp", "when": "terminalFocus" },
  { "key": "ctrl+b shift+l", "command": "workbench.action.terminal.resizePaneRight", "when": "terminalFocus" },
  { "key": "ctrl+alt+left", "command": "workbench.action.terminal.resizePaneLeft", "when": "terminalFocus" },
  { "key": "ctrl+alt+right", "command": "workbench.action.terminal.resizePaneRight", "when": "terminalFocus" },
  { "key": "ctrl+alt+down", "command": "workbench.action.terminal.resizePaneDown", "when": "terminalFocus" },
  { "key": "ctrl+alt+up", "command": "workbench.action.terminal.resizePaneUp", "when": "terminalFocus" },

  // tmux-windows
  { "key": "ctrl+b ,", "command": "workbench.action.terminal.rename", "when": "terminalFocus" },
  { "key": "ctrl+b n", "command": "workbench.action.terminal.focusNext", "when": "terminalFocus" },
  { "key": "ctrl+b p", "command": "workbench.action.terminal.focusPrevious", "when": "terminalFocus" },
  { "key": "ctrl+b v", "command": "workbench.action.terminal.split", "when": "terminalFocus" },
  { "key": "ctrl+b shift+v", "command": "runCommands", "args": { "commands": [ "workbench.action.terminal.split", "workbench.action.moveActiveEditorGroupDown" ] }, "when": "terminalFocus" },
  { "key": "ctrl+alt+v", "command": "workbench.action.terminal.split", "when": "terminalFocus" },
  { "key": "ctrl+alt+h", "command": "runCommands", "args": { "commands": [ "workbench.action.terminal.split", "workbench.action.moveActiveEditorGroupDown" ] }, "when": "terminalFocus" },

  // Terminal buffer-scrollback
  {
    "key": "ctrl+b [",
    "command": "runCommands",
    "args": {
      "commands": [
        { "command": "workbench.action.terminal.selectAll", },
        { "command": "editor.action.clipboardCopyAction" },
        { "command": "workbench.action.files.newUntitledFile" },
        { "command": "editor.action.clipboardPasteAction" }
      ]
    }
  },

  // Terminal Resize
  { "key": "alt+left", "command": "workbench.action.terminal.resizePaneLeft", "when": "terminalFocus" },
  { "key": "alt+right", "command": "workbench.action.terminal.resizePaneRight", "when": "terminalFocus" },
  { "key": "alt+down", "command": "workbench.action.terminal.resizePaneDown", "when": "terminalFocus" },
  { "key": "alt+up", "command": "workbench.action.terminal.resizePaneUp", "when": "terminalFocus" },

  // Window Resize
  { "key": "alt+left", "command": "workbench.action.decreaseViewSize", "when": "neovim.mode != insert && !terminalFocus" },
  { "key": "alt+right", "command": "workbench.action.increaseViewSize", "when": "neovim.mode != insert && !terminalFocus" },
  { "key": "alt+down", "command": "vscode-neovim.send", "args": "<C-w>-", "when": "neovim.mode != insert && !terminalFocus" },
  { "key": "alt+up", "command": "vscode-neovim.send", "args": "<C-w>+", "when": "neovim.mode != insert && !terminalFocus" },

  // Window Navigation
  { "key": "ctrl+h", "command": "workbench.action.navigateLeft", "when": "neovim.mode == 'normal'" },
  { "key": "ctrl+j", "command": "workbench.action.navigateDown", "when": "neovim.mode == 'normal'" },
  { "key": "ctrl+k", "command": "workbench.action.navigateUp", "when": "neovim.mode == 'normal'" },
  { "key": "ctrl+l", "command": "workbench.action.navigateRight", "when": "neovim.mode == 'normal'" },

  // Toggle ParameterHints (neovim.mode=='Normal' -> <C-p>:GoToFile, gH:triggerParameterHints)
  { "key": "ctrl+p", "command": "editor.action.triggerParameterHints", "when": "editorFocus && editorHasSignatureHelpProvider && neovim.mode == 'insert'" },
  { "key": "ctrl+p", "command": "closeParameterHints", "when": "editorFocus && parameterHintsVisible && neovim.mode == 'insert'" },

  // Toggle Completion
  { "key": "ctrl+space", "command": "editor.action.triggerSuggest", "when": "!suggestWidgetVisible && textInputFocus" },
  { "key": "ctrl+space", "command": "hideSuggestWidget", "when": "suggestWidgetVisible && textInputFocus" },

  // Completion Navigation (pgdown/pgup scrolls suggestion's preview focused)
  { "key": "ctrl+shift+space", "command": "toggleSuggestionFocus", "when": "suggestWidgetVisible && textInputFocus" },
  { "key": "alt+j", "command": "editor.action.inlineSuggest.showNext", "when": "inlineSuggestionVisible && neovim.mode == 'insert'" },
  { "key": "alt+k", "command": "editor.action.inlineSuggest.showPrevious", "when": "inlineSuggestionVisible && neovim.mode == 'insert'" },
  { "key": "alt+l", "command": "editor.action.inlineSuggest.commit", "when": "inlineSuggestionVisible && neovim.mode == 'insert'" },
  { "key": "ctrl+j", "command": "selectNextSuggestion", "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible" },
  { "key": "ctrl+k", "command": "selectPrevSuggestion", "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible" },
  { "key": "ctrl+l", "command": "acceptSelectedSuggestion", "when": "acceptSuggestionOnEnter && suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && suggestionMakesTextEdit && textInputFocus" },
  { "key": "tab", "command": "selectNextSuggestion", "when": "!terminalFocus && editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible" },
  { "key": "shift+tab", "command": "selectPrevSuggestion", "when": "!terminalFocus && editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible" },

  // QuickOpen Navigation
  { "key": "alt+;", "command": "workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup", "when": "!activeEditorGroupEmpty" },
  { "key": "alt+;", "command": "workbench.action.quickOpenNavigateNext", "when": "inQuickOpen" },
  { "key": "alt+shift+;", "command": "workbench.action.quickOpenLeastRecentlyUsedEditorInGroup", "when": "!activeEditorGroupEmpty" },
  { "key": "alt+shift+;", "command": "workbench.action.quickOpenNavigatePrevious", "when": "inQuickOpen" },
  { "key": "ctrl+j", "command": "workbench.action.quickOpenNavigateNext", "when": "inQuickOpen" },
  { "key": "ctrl+k", "command": "workbench.action.quickOpenNavigatePrevious", "when": "inQuickOpen" },
  { "key": "tab", "command": "workbench.action.quickOpenNavigateNext", "when": "!terminalFocus && inQuickOpen" },
  { "key": "shift+tab", "command": "workbench.action.quickOpenNavigatePrevious", "when": "!terminalFocus && inQuickOpen" },

  // Buffer Navigation
  { "key": "left", "command": "workbench.action.previousEditor", "when": "!terminalFocus && !sideBarFocus && neovim.mode == 'normal' && editorFocus" },
  { "key": "right", "command": "workbench.action.nextEditor", "when": "!terminalFocus && !sideBarFocus && neovim.mode == 'normal' && editorFocus" },
  { "key": "tab", "command": "workbench.action.nextEditor", "when": "!terminalFocus && !sideBarFocus && neovim.mode == 'normal' && editorFocus" },
  { "key": "shift+tab", "command": "workbench.action.previousEditor", "when": "!terminalFocus && !sideBarFocus && neovim.mode == 'normal' && editorFocus" },
  { "key": "ctrl+tab", "command": "workbench.action.nextEditor" },
  { "key": "ctrl+shift+tab", "command": "workbench.action.previousEditor" },

  // VScode-neovim
  // { "key": "shift+r", "command": "vscode-neovim.send", "args": "<cmd>lua vim.fn.VSCodeCall('editor.action.format') vim.fn.VSCodeCall('workbench.action.files.save')<cr>", "when": "editorTextFocus && neovim.mode == normal", },
  { "key": "shift+r", "command": "vscode-neovim.send", "args": "<cmd>call VSCodeCall('editor.action.format')<cr><cmd>call VSCodeCall('workbench.action.files.save')<cr>", "when": "editorTextFocus && neovim.mode == normal" },
  { "key": "alt+/", "command": "vscode-neovim.send", "args": "<cmd>lua vim.fn.VSCodeNotify('editor.action.commentLine')<cr>", "when": "inputFocus && neovim.mode == 'visual' || neovim.mode == 'visualLine' || neovim.mode == 'visualBlock'" },
  { "key": "alt+/", "command": "vscode-neovim.send", "args": "<Cmd>call VSCodeNotify('editor.action.commentLine')<CR>", "when": "inputFocus && neovim.mode == 'normal'" },
  { "key": "ctrl+space", "command": "vscode-neovim.send", "args": "<C-space>", "when": "editorTextFocus && neovim.mode != insert" },
  { "key": "shift+q", "command": "workbench.action.closeActiveEditor", "when": "editorTextFocus && neovim.mode == normal" },

  // Find/Search (conflicting keymaps)
  { "key": "alt+w", "command": "-workbench.action.terminal.toggleFindWholeWord", "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported" },
  { "key": "alt+r", "command": "-workbench.action.terminal.toggleFindRegex", "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported" },

  // Tmux navigation (conflicting keymaps)
  { "key": "ctrl+up", "command": "-workbench.action.terminal.scrollToPreviousCommand", "when": "terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled" },
  { "key": "ctrl+down", "command": "-workbench.action.terminal.scrollToNextCommand", "when": "terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled" },

  // Insert Tab (conflicting keymaps)
  { "key": "tab", "command": "-editor.action.inlineSuggest.commit", "when": "inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editorTabMovesFocus" },
  { "key": "tab", "command": "-editor.action.inlineSuggest.commit", "when": "editorFocus && inlineSuggestionVisible && !editorReadonly" }
]